<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://github.com/jiangyilin123/jiangyilin123.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Dec 2021 18:32:31 -0600</lastBuildDate><atom:link href="https://github.com/jiangyilin123/jiangyilin123.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>First</title>
      <link>https://github.com/jiangyilin123/jiangyilin123.github.io/post/first/</link>
      <pubDate>Tue, 21 Dec 2021 18:32:31 -0600</pubDate>
      
      <guid>https://github.com/jiangyilin123/jiangyilin123.github.io/post/first/</guid>
      <description>Json Format 快速找到key #数据处理 -[[Python#Zip实现快速转字典，存入数据库]]
d = response.json() a = d.keys() b = list(a) print(b[0]) 上面的代码把API 内得到的response变成了json 之后又把json的key 放到变量a里面 之后再打印出第一个key
字典增加object 使用data.update({&amp;ldquo;name&amp;rdquo;:&amp;ldquo;value&amp;rdquo;})
时间戳 时间戳转换时区 #数据处理 如果一个timestamp并没有任何声明,他是没有任何时区的: 我们需要让他知道time zone. 这里一般直接使用pandas内置的tz_localize这个function,它的用法在pandas.Series.tz_localize — pandas 1.3.5 documentation (pydata.org)
s = pd.Series([1],index=pd.DatetimeIndex([&amp;#39;2018-09-15 01:30:00&amp;#39;])) s.tz_localize(&amp;#39;CET&amp;#39;) 另外时间戳转换在线软件: [[好用的网页#时间转换]]
epoch 快速变成utc 时间 使用datetime的库，其中有专门的utc时间
dataframe[&amp;#39;dt&amp;#39;] = dataframe[&amp;#39;dt&amp;#39;].apply(lambda x: datetime.utcfromtimestamp(x)) 配置文件 #后端
多个配置文件  第一种想到的方案： 如何使用Python ConfigParser的多个配置文件？ - 问答 - 云+社区 - 腾讯云 (tencent.com) 第二种想到的方案  也许这里可以去考虑多个配置文件串联 Zip实现快速转字典，存入数据库 如果你有两个numpy或者list， 快速使用zip变成dictionary，从而方便进入数据库。 python - zip to dictioanry- Stack Overflow</description>
    </item>
    
  </channel>
</rss>
